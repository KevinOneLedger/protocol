=== RUN   TestDump
Test:
(*comm.RootStruct2)({
    RootName: (string) (len=10) "The Root 2",
    Count: (int) 2000,
    Node1: (*comm.NodeStruct1)({
        NodeName: (string) (len=10) "The Node 1",
        Size: (int) 1000,
        Interface: (interface {}) <nil>,
        Slice: ([]int) <nil>,
        Map: (map[string]string) <nil>,
        Array: ([]uint8) <nil>,
        Boolean: (bool) false,
        Integer: (int) 0,
        Int8: (int8) 0,
        Int16: (int16) 0,
        Int32: (int32) 0,
        Int64: (int64) 0,
        UnsignedInt: (uint) 0,
        Uint8: (uint8) 0,
        Uint16: (uint16) 0,
        Uint32: (uint32) 0,
        Uint64: (uint64) 0,
        Float32: (float32) 0,
        Float64: (float64) 0,
        String: (string) ""
    }),
    Node2: (comm.NodeStruct2) {
        NodeName: (string) (len=11) "The Child 2",
        Size: (int) 3000,
        Size2: (int) -1,
        Interface: (interface {}) <nil>,
        Slice: ([]int) <nil>,
        Map: (map[string]string) <nil>,
        Array: ([]uint8) <nil>,
        Boolean: (bool) false,
        Integer: (int) 0,
        Int8: (int8) 0,
        Int16: (int16) 0,
        Int32: (int32) 0,
        Int64: (int64) 0,
        UnsignedInt: (uint) 0,
        Uint8: (uint8) 0,
        Uint16: (uint16) 0,
        Uint32: (uint32) 0,
        Uint64: (uint64) 0,
        Float32: (float32) 0,
        Float64: (float64) 0,
        String: (string) ""
    },
    Interface: (interface {}) <nil>,
    Slice: ([]int) <nil>,
    Map: (map[string]string) <nil>,
    Array: ([]uint8) <nil>,
    Boolean: (bool) false,
    Integer: (int) 0,
    Int8: (int8) 0,
    Int16: (int16) 0,
    Int32: (int32) 0,
    Int64: (int64) 0,
    UnsignedInt: (uint) 0,
    Uint8: (uint8) 0,
    Uint16: (uint16) 0,
    Uint32: (uint32) 0,
    Uint64: (uint64) 0,
    Float32: (float32) 0,
    Float64: (float64) 0,
    String: (string) ""
})

--- PASS: TestDump (0.00s)
=== RUN   TestStack
D[10-10|21:52:10.609] Stack                                        index=0 value=Top
D[10-10|21:52:10.609] Stack                                        index=1 value=Middle
D[10-10|21:52:10.609] Stack                                        index=2 value=Bottom
D[10-10|21:52:10.609] Top                                          is=Top
D[10-10|21:52:10.609] Middle                                       is=Middle
D[10-10|21:52:10.609] Bottom                                       is=Bottom
--- PASS: TestStack (0.00s)
=== RUN   TestPrint
#### Node:
(string) (len=10) "The Root 2"
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=3) {
            (string) (len=8) "RootName",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=8) "RootName",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=2) {
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(int) 2000
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=3) {
            (string) (len=5) "Count",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=5) "Count",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=2) {
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(string) (len=10) "The Node 1"
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=4) {
            (string) (len=8) "NodeName",
            (string) (len=5) "Node1",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=8) "NodeName",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=3) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(int) 1000
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=4) {
            (string) (len=4) "Size",
            (string) (len=5) "Node1",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=4) "Size",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=3) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(interface {}) <nil>
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=4) {
            (string) (len=9) "Interface",
            (string) (len=5) "Node1",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=9) "Interface",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=3) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
([]int) <nil>
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=4) {
            (string) (len=5) "Slice",
            (string) (len=5) "Node1",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=5) "Slice",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=3) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(map[string]string) <nil>
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=4) {
            (string) (len=3) "Map",
            (string) (len=5) "Node1",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=3) "Map",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=3) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
([]uint8) <nil>
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=4) {
            (string) (len=5) "Array",
            (string) (len=5) "Node1",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=5) "Array",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=3) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(bool) false
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=4) {
            (string) (len=7) "Boolean",
            (string) (len=5) "Node1",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=7) "Boolean",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=3) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(int) 0
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=4) {
            (string) (len=7) "Integer",
            (string) (len=5) "Node1",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=7) "Integer",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=3) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(int8) 0
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=4) {
            (string) (len=4) "Int8",
            (string) (len=5) "Node1",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=4) "Int8",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=3) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(int16) 0
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=4) {
            (string) (len=5) "Int16",
            (string) (len=5) "Node1",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=5) "Int16",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=3) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(int32) 0
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=4) {
            (string) (len=5) "Int32",
            (string) (len=5) "Node1",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=5) "Int32",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=3) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(int64) 0
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=4) {
            (string) (len=5) "Int64",
            (string) (len=5) "Node1",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=5) "Int64",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=3) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(uint) 0
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=4) {
            (string) (len=11) "UnsignedInt",
            (string) (len=5) "Node1",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=11) "UnsignedInt",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=3) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(uint8) 0
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=4) {
            (string) (len=5) "Uint8",
            (string) (len=5) "Node1",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=5) "Uint8",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=3) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(uint16) 0
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=4) {
            (string) (len=6) "Uint16",
            (string) (len=5) "Node1",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=6) "Uint16",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=3) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(uint32) 0
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=4) {
            (string) (len=6) "Uint32",
            (string) (len=5) "Node1",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=6) "Uint32",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=3) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(uint64) 0
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=4) {
            (string) (len=6) "Uint64",
            (string) (len=5) "Node1",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=6) "Uint64",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=3) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(float32) 0
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=4) {
            (string) (len=7) "Float32",
            (string) (len=5) "Node1",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=7) "Float32",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=3) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(float64) 0
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=4) {
            (string) (len=7) "Float64",
            (string) (len=5) "Node1",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=7) "Float64",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=3) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(string) ""
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=4) {
            (string) (len=6) "String",
            (string) (len=5) "Node1",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=6) "String",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=3) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(comm.NodeStruct1) {
    NodeName: (string) (len=10) "The Node 1",
    Size: (int) 1000,
    Interface: (interface {}) <nil>,
    Slice: ([]int) <nil>,
    Map: (map[string]string) <nil>,
    Array: ([]uint8) <nil>,
    Boolean: (bool) false,
    Integer: (int) 0,
    Int8: (int8) 0,
    Int16: (int16) 0,
    Int32: (int32) 0,
    Int64: (int64) 0,
    UnsignedInt: (uint) 0,
    Uint8: (uint8) 0,
    Uint16: (uint16) 0,
    Uint32: (uint32) 0,
    Uint64: (uint64) 0,
    Float32: (float32) 0,
    Float64: (float64) 0,
    String: (string) ""
}
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=3) {
            (string) (len=5) "Node1",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=5) "Node1",
    Index: (int) 0,
    IsPointer: (bool) true,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=3) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(string) (len=11) "The Child 2"
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=4) {
            (string) (len=8) "NodeName",
            (string) (len=5) "Node2",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=8) "NodeName",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=4) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=5) "Node2": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(int) 3000
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=4) {
            (string) (len=4) "Size",
            (string) (len=5) "Node2",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=4) "Size",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=4) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=5) "Node2": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(int) -1
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=4) {
            (string) (len=5) "Size2",
            (string) (len=5) "Node2",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=5) "Size2",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=4) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=5) "Node2": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(interface {}) <nil>
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=4) {
            (string) (len=9) "Interface",
            (string) (len=5) "Node2",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=9) "Interface",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=4) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=5) "Node2": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
([]int) <nil>
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=4) {
            (string) (len=5) "Slice",
            (string) (len=5) "Node2",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=5) "Slice",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=4) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=5) "Node2": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(map[string]string) <nil>
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=4) {
            (string) (len=3) "Map",
            (string) (len=5) "Node2",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=3) "Map",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=4) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=5) "Node2": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
([]uint8) <nil>
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=4) {
            (string) (len=5) "Array",
            (string) (len=5) "Node2",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=5) "Array",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=4) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=5) "Node2": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(bool) false
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=4) {
            (string) (len=7) "Boolean",
            (string) (len=5) "Node2",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=7) "Boolean",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=4) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=5) "Node2": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(int) 0
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=4) {
            (string) (len=7) "Integer",
            (string) (len=5) "Node2",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=7) "Integer",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=4) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=5) "Node2": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(int8) 0
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=4) {
            (string) (len=4) "Int8",
            (string) (len=5) "Node2",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=4) "Int8",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=4) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=5) "Node2": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(int16) 0
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=4) {
            (string) (len=5) "Int16",
            (string) (len=5) "Node2",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=5) "Int16",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=4) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=5) "Node2": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(int32) 0
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=4) {
            (string) (len=5) "Int32",
            (string) (len=5) "Node2",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=5) "Int32",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=4) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=5) "Node2": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(int64) 0
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=4) {
            (string) (len=5) "Int64",
            (string) (len=5) "Node2",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=5) "Int64",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=4) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=5) "Node2": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(uint) 0
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=4) {
            (string) (len=11) "UnsignedInt",
            (string) (len=5) "Node2",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=11) "UnsignedInt",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=4) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=5) "Node2": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(uint8) 0
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=4) {
            (string) (len=5) "Uint8",
            (string) (len=5) "Node2",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=5) "Uint8",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=4) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=5) "Node2": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(uint16) 0
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=4) {
            (string) (len=6) "Uint16",
            (string) (len=5) "Node2",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=6) "Uint16",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=4) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=5) "Node2": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(uint32) 0
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=4) {
            (string) (len=6) "Uint32",
            (string) (len=5) "Node2",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=6) "Uint32",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=4) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=5) "Node2": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(uint64) 0
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=4) {
            (string) (len=6) "Uint64",
            (string) (len=5) "Node2",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=6) "Uint64",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=4) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=5) "Node2": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(float32) 0
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=4) {
            (string) (len=7) "Float32",
            (string) (len=5) "Node2",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=7) "Float32",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=4) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=5) "Node2": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(float64) 0
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=4) {
            (string) (len=7) "Float64",
            (string) (len=5) "Node2",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=7) "Float64",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=4) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=5) "Node2": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(string) ""
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=4) {
            (string) (len=6) "String",
            (string) (len=5) "Node2",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=6) "String",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=4) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=5) "Node2": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(comm.NodeStruct2) {
    NodeName: (string) (len=11) "The Child 2",
    Size: (int) 3000,
    Size2: (int) -1,
    Interface: (interface {}) <nil>,
    Slice: ([]int) <nil>,
    Map: (map[string]string) <nil>,
    Array: ([]uint8) <nil>,
    Boolean: (bool) false,
    Integer: (int) 0,
    Int8: (int8) 0,
    Int16: (int16) 0,
    Int32: (int32) 0,
    Int64: (int64) 0,
    UnsignedInt: (uint) 0,
    Uint8: (uint8) 0,
    Uint16: (uint16) 0,
    Uint32: (uint32) 0,
    Uint64: (uint64) 0,
    Float32: (float32) 0,
    Float64: (float64) 0,
    String: (string) ""
}
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=3) {
            (string) (len=5) "Node2",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=5) "Node2",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=4) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=5) "Node2": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(interface {}) <nil>
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=3) {
            (string) (len=9) "Interface",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=9) "Interface",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=4) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=5) "Node2": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
([]int) <nil>
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=3) {
            (string) (len=5) "Slice",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=5) "Slice",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=4) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=5) "Node2": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(map[string]string) <nil>
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=3) {
            (string) (len=3) "Map",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=3) "Map",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=4) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=5) "Node2": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
([]uint8) <nil>
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=3) {
            (string) (len=5) "Array",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=5) "Array",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=4) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=5) "Node2": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(bool) false
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=3) {
            (string) (len=7) "Boolean",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=7) "Boolean",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=4) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=5) "Node2": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(int) 0
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=3) {
            (string) (len=7) "Integer",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=7) "Integer",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=4) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=5) "Node2": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(int8) 0
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=3) {
            (string) (len=4) "Int8",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=4) "Int8",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=4) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=5) "Node2": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(int16) 0
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=3) {
            (string) (len=5) "Int16",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=5) "Int16",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=4) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=5) "Node2": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(int32) 0
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=3) {
            (string) (len=5) "Int32",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=5) "Int32",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=4) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=5) "Node2": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(int64) 0
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=3) {
            (string) (len=5) "Int64",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=5) "Int64",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=4) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=5) "Node2": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(uint) 0
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=3) {
            (string) (len=11) "UnsignedInt",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=11) "UnsignedInt",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=4) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=5) "Node2": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(uint8) 0
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=3) {
            (string) (len=5) "Uint8",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=5) "Uint8",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=4) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=5) "Node2": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(uint16) 0
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=3) {
            (string) (len=6) "Uint16",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=6) "Uint16",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=4) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=5) "Node2": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(uint32) 0
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=3) {
            (string) (len=6) "Uint32",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=6) "Uint32",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=4) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=5) "Node2": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(uint64) 0
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=3) {
            (string) (len=6) "Uint64",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=6) "Uint64",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=4) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=5) "Node2": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(float32) 0
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=3) {
            (string) (len=7) "Float32",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=7) "Float32",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=4) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=5) "Node2": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(float64) 0
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=3) {
            (string) (len=7) "Float64",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=7) "Float64",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=4) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=5) "Node2": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(string) ""
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=3) {
            (string) (len=6) "String",
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=6) "String",
    Index: (int) 0,
    IsPointer: (bool) false,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=4) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=5) "Node2": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

#### Node:
(comm.RootStruct2) {
    RootName: (string) (len=10) "The Root 2",
    Count: (int) 2000,
    Node1: (*comm.NodeStruct1)({
        NodeName: (string) (len=10) "The Node 1",
        Size: (int) 1000,
        Interface: (interface {}) <nil>,
        Slice: ([]int) <nil>,
        Map: (map[string]string) <nil>,
        Array: ([]uint8) <nil>,
        Boolean: (bool) false,
        Integer: (int) 0,
        Int8: (int8) 0,
        Int16: (int16) 0,
        Int32: (int32) 0,
        Int64: (int64) 0,
        UnsignedInt: (uint) 0,
        Uint8: (uint8) 0,
        Uint16: (uint16) 0,
        Uint32: (uint32) 0,
        Uint64: (uint64) 0,
        Float32: (float32) 0,
        Float64: (float64) 0,
        String: (string) ""
    }),
    Node2: (comm.NodeStruct2) {
        NodeName: (string) (len=11) "The Child 2",
        Size: (int) 3000,
        Size2: (int) -1,
        Interface: (interface {}) <nil>,
        Slice: ([]int) <nil>,
        Map: (map[string]string) <nil>,
        Array: ([]uint8) <nil>,
        Boolean: (bool) false,
        Integer: (int) 0,
        Int8: (int8) 0,
        Int16: (int16) 0,
        Int32: (int32) 0,
        Int64: (int64) 0,
        UnsignedInt: (uint) 0,
        Uint8: (uint8) 0,
        Uint16: (uint16) 0,
        Uint32: (uint32) 0,
        Uint64: (uint64) 0,
        Float32: (float32) 0,
        Float64: (float64) 0,
        String: (string) ""
    },
    Interface: (interface {}) <nil>,
    Slice: ([]int) <nil>,
    Map: (map[string]string) <nil>,
    Array: ([]uint8) <nil>,
    Boolean: (bool) false,
    Integer: (int) 0,
    Int8: (int8) 0,
    Int16: (int16) 0,
    Int32: (int32) 0,
    Int64: (int64) 0,
    UnsignedInt: (uint) 0,
    Uint8: (uint8) 0,
    Uint16: (uint16) 0,
    Uint32: (uint32) 0,
    Uint64: (uint64) 0,
    Float32: (float32) 0,
    Float64: (float64) 0,
    String: (string) ""
}
(*comm.Action)({
    IgnorePrimitives: (bool) false,
    Path: (comm.Stack) {
        base: ([]interface {}) (len=2) {
            (string) (len=4) "base",
            (string) (len=4) "root"
        }
    },
    Name: (string) (len=4) "base",
    Index: (int) 0,
    IsPointer: (bool) true,
    ProcessField: (func(*comm.Action, interface {}) interface {}) 0x16a10e0,
    Processed: (map[string]comm.Parameters) (len=4) {
        (string) (len=5) "Node1": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=5) "Node2": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "base": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        },
        (string) (len=4) "root": (comm.Parameters) {
            Children: (map[string]interface {}) {
            }
        }
    }
})

--- PASS: TestPrint (0.10s)
=== RUN   TestClone
D[10-10|21:52:10.706] Catching A Panic                             
D[10-10|21:52:10.706] Catching A Panic                             
D[10-10|21:52:10.706] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Trying to set Interface                      child="{NodeName:The Child 2 Size:3000 Size2:-1 Interface:<nil> Slice:[] Map:map[] Array:[] Boolean:false Integer:0 Int8:0 Int16:0 Int32:0 Int64:0 UnsignedInt:0 Uint8:0 Uint16:0 Uint32:0 Uint64:0 Float32:0 Float64:0 String:}" type=comm.NodeStruct2 value="<comm.NodeStruct2 Value>"
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Catching A Panic                             
D[10-10|21:52:10.707] Trying to set Interface                      child="&{NodeName:The Node 1 Size:1000 Interface:<nil> Slice:[] Map:map[] Array:[] Boolean:false Integer:0 Int8:0 Int16:0 Int32:0 Int64:0 UnsignedInt:0 Uint8:0 Uint16:0 Uint32:0 Uint64:0 Float32:0 Float64:0 String:}" type=*comm.NodeStruct1 value="<*comm.NodeStruct1 Value>"
D[10-10|21:52:10.707] Catching A Panic                             
--- FAIL: TestClone (0.00s)
	message_test.go:226: 
			Error Trace:	message_test.go:226
			Error:      	Should not be: &comm.RootStruct2{RootName:"The Root 2", Count:2000, Node1:(*comm.NodeStruct1)(0xc4207ce480), Node2:comm.NodeStruct2{NodeName:"The Child 2", Size:3000, Size2:-1, Interface:interface {}(nil), Slice:[]int(nil), Map:map[string]string(nil), Array:[]uint8(nil), Boolean:false, Integer:0, Int8:0, Int16:0, Int32:0, Int64:0, UnsignedInt:0x0, Uint8:0x0, Uint16:0x0, Uint32:0x0, Uint64:0x0, Float32:0, Float64:0, String:""}, Interface:interface {}(nil), Slice:[]int(nil), Map:map[string]string(nil), Array:[]uint8(nil), Boolean:false, Integer:0, Int8:0, Int16:0, Int32:0, Int64:0, UnsignedInt:0x0, Uint8:0x0, Uint16:0x0, Uint32:0x0, Uint64:0x0, Float32:0, Float64:0, String:""}
			Test:       	TestClone
			Messages:   	These should be equal
=== RUN   TestExtend
D[10-10|21:52:10.707] Extended is                                  opp2="{Type:*comm.RootStruct2 Fields:map[Boolean:false Int8:0 Uint16:0 Uint32:0 String: Interface:<nil> Map:map[] Slice:[] Array:[] Int64:0 UnsignedInt:0 Uint8:0 RootName:The Root 2 Node2:{Type:comm.NodeStruct2 Fields:map[Size:3000 Slice:[] String: Integer:0 Int8:0 Uint8:0 Uint32:0 NodeName:The Child 2 Interface:<nil> Map:map[] Array:[] Float64:0 UnsignedInt:0 Uint16:0 Size2:-1 Int16:0 Int32:0 Int64:0 Boolean:false Uint64:0 Float32:0]} Float32:0 Float64:0 Integer:0 Int32:0 Int16:0 Uint64:0 Count:2000 Node1:{Type:*comm.NodeStruct1 Fields:map[Map:map[] Boolean:false UnsignedInt:0 Uint32:0 NodeName:The Node 1 Interface:<nil> Uint8:0 Size:1000 Int16:0 Int32:0 Int64:0 Uint16:0 Uint64:0 Float32:0 Float64:0 Slice:[] Array:[] Integer:0 Int8:0 String:]}]}" opp="&{RootName:The Root 2 Count:2000 Node1:0x1e4ade0 Node2:{NodeName:The Child 2 Size:3000 Size2:-1 Interface:<nil> Slice:[] Map:map[] Array:[] Boolean:false Integer:0 Int8:0 Int16:0 Int32:0 Int64:0 UnsignedInt:0 Uint8:0 Uint16:0 Uint32:0 Uint64:0 Float32:0 Float64:0 String:} Interface:<nil> Slice:[] Map:map[] Array:[] Boolean:false Integer:0 Int8:0 Int16:0 Int32:0 Int64:0 UnsignedInt:0 Uint8:0 Uint16:0 Uint32:0 Uint64:0 Float32:0 Float64:0 String:}"
--- PASS: TestExtend (0.00s)
=== RUN   TestSerialize
buffer:
(string) (len=903) "{\"Type\":\"*comm.RootStruct2\",\"Fields\":{\"Array\":null,\"Boolean\":false,\"Count\":2000,\"Float32\":0,\"Float64\":0,\"Int16\":0,\"Int32\":0,\"Int64\":0,\"Int8\":0,\"Integer\":0,\"Interface\":null,\"Map\":null,\"Node1\":{\"Type\":\"*comm.NodeStruct1\",\"Fields\":{\"Array\":null,\"Boolean\":false,\"Float32\":0,\"Float64\":0,\"Int16\":0,\"Int32\":0,\"Int64\":0,\"Int8\":0,\"Integer\":0,\"Interface\":null,\"Map\":null,\"NodeName\":\"The Node 1\",\"Size\":1000,\"Slice\":null,\"String\":\"\",\"Uint16\":0,\"Uint32\":0,\"Uint64\":0,\"Uint8\":0,\"UnsignedInt\":0}},\"Node2\":{\"Type\":\"comm.NodeStruct2\",\"Fields\":{\"Array\":null,\"Boolean\":false,\"Float32\":0,\"Float64\":0,\"Int16\":0,\"Int32\":0,\"Int64\":0,\"Int8\":0,\"Integer\":0,\"Interface\":null,\"Map\":null,\"NodeName\":\"The Child 2\",\"Size\":3000,\"Size2\":-1,\"Slice\":null,\"String\":\"\",\"Uint16\":0,\"Uint32\":0,\"Uint64\":0,\"Uint8\":0,\"UnsignedInt\":0}},\"RootName\":\"The Root 2\",\"Slice\":null,\"String\":\"\",\"Uint16\":0,\"Uint32\":0,\"Uint64\":0,\"Uint8\":0,\"UnsignedInt\":0}}"
(string) (len=3) "err"
(interface {}) <nil>

D[10-10|21:52:10.708] Serialized Worked, return is                 buffer="{\"Type\":\"*comm.RootStruct2\",\"Fields\":{\"Array\":null,\"Boolean\":false,\"Count\":2000,\"Float32\":0,\"Float64\":0,\"Int16\":0,\"Int32\":0,\"Int64\":0,\"Int8\":0,\"Integer\":0,\"Interface\":null,\"Map\":null,\"Node1\":{\"Type\":\"*comm.NodeStruct1\",\"Fields\":{\"Array\":null,\"Boolean\":false,\"Float32\":0,\"Float64\":0,\"Int16\":0,\"Int32\":0,\"Int64\":0,\"Int8\":0,\"Integer\":0,\"Interface\":null,\"Map\":null,\"NodeName\":\"The Node 1\",\"Size\":1000,\"Slice\":null,\"String\":\"\",\"Uint16\":0,\"Uint32\":0,\"Uint64\":0,\"Uint8\":0,\"UnsignedInt\":0}},\"Node2\":{\"Type\":\"comm.NodeStruct2\",\"Fields\":{\"Array\":null,\"Boolean\":false,\"Float32\":0,\"Float64\":0,\"Int16\":0,\"Int32\":0,\"Int64\":0,\"Int8\":0,\"Integer\":0,\"Interface\":null,\"Map\":null,\"NodeName\":\"The Child 2\",\"Size\":3000,\"Size2\":-1,\"Slice\":null,\"String\":\"\",\"Uint16\":0,\"Uint32\":0,\"Uint64\":0,\"Uint8\":0,\"UnsignedInt\":0}},\"RootName\":\"The Root 2\",\"Slice\":null,\"String\":\"\",\"Uint16\":0,\"Uint32\":0,\"Uint64\":0,\"Uint8\":0,\"UnsignedInt\":0}}"
--- PASS: TestSerialize (0.00s)
=== RUN   TestPolymorphism
buffer:
(string) (len=903) "{\"Type\":\"*comm.RootStruct2\",\"Fields\":{\"Array\":null,\"Boolean\":false,\"Count\":2000,\"Float32\":0,\"Float64\":0,\"Int16\":0,\"Int32\":0,\"Int64\":0,\"Int8\":0,\"Integer\":0,\"Interface\":null,\"Map\":null,\"Node1\":{\"Type\":\"*comm.NodeStruct1\",\"Fields\":{\"Array\":null,\"Boolean\":false,\"Float32\":0,\"Float64\":0,\"Int16\":0,\"Int32\":0,\"Int64\":0,\"Int8\":0,\"Integer\":0,\"Interface\":null,\"Map\":null,\"NodeName\":\"The Node 1\",\"Size\":1000,\"Slice\":null,\"String\":\"\",\"Uint16\":0,\"Uint32\":0,\"Uint64\":0,\"Uint8\":0,\"UnsignedInt\":0}},\"Node2\":{\"Type\":\"comm.NodeStruct2\",\"Fields\":{\"Array\":null,\"Boolean\":false,\"Float32\":0,\"Float64\":0,\"Int16\":0,\"Int32\":0,\"Int64\":0,\"Int8\":0,\"Integer\":0,\"Interface\":null,\"Map\":null,\"NodeName\":\"The Child 2\",\"Size\":3000,\"Size2\":-1,\"Slice\":null,\"String\":\"\",\"Uint16\":0,\"Uint32\":0,\"Uint64\":0,\"Uint8\":0,\"UnsignedInt\":0}},\"RootName\":\"The Root 2\",\"Slice\":null,\"String\":\"\",\"Uint16\":0,\"Uint32\":0,\"Uint64\":0,\"Uint8\":0,\"UnsignedInt\":0}}"
(string) (len=3) "err"
(interface {}) <nil>

Deserialize the string:
(string) (len=903) "{\"Type\":\"*comm.RootStruct2\",\"Fields\":{\"Array\":null,\"Boolean\":false,\"Count\":2000,\"Float32\":0,\"Float64\":0,\"Int16\":0,\"Int32\":0,\"Int64\":0,\"Int8\":0,\"Integer\":0,\"Interface\":null,\"Map\":null,\"Node1\":{\"Type\":\"*comm.NodeStruct1\",\"Fields\":{\"Array\":null,\"Boolean\":false,\"Float32\":0,\"Float64\":0,\"Int16\":0,\"Int32\":0,\"Int64\":0,\"Int8\":0,\"Integer\":0,\"Interface\":null,\"Map\":null,\"NodeName\":\"The Node 1\",\"Size\":1000,\"Slice\":null,\"String\":\"\",\"Uint16\":0,\"Uint32\":0,\"Uint64\":0,\"Uint8\":0,\"UnsignedInt\":0}},\"Node2\":{\"Type\":\"comm.NodeStruct2\",\"Fields\":{\"Array\":null,\"Boolean\":false,\"Float32\":0,\"Float64\":0,\"Int16\":0,\"Int32\":0,\"Int64\":0,\"Int8\":0,\"Integer\":0,\"Interface\":null,\"Map\":null,\"NodeName\":\"The Child 2\",\"Size\":3000,\"Size2\":-1,\"Slice\":null,\"String\":\"\",\"Uint16\":0,\"Uint32\":0,\"Uint64\":0,\"Uint8\":0,\"UnsignedInt\":0}},\"RootName\":\"The Root 2\",\"Slice\":null,\"String\":\"\",\"Uint16\":0,\"Uint32\":0,\"Uint64\":0,\"Uint8\":0,\"UnsignedInt\":0}}"

D[10-10|21:52:10.708] Catching A Panic                             
D[10-10|21:52:10.708] Catching A Panic                             
D[10-10|21:52:10.708] Catching A Panic                             
D[10-10|21:52:10.708] Catching A Panic                             
D[10-10|21:52:10.708] Catching A Panic                             
D[10-10|21:52:10.708] Catching A Panic                             
D[10-10|21:52:10.708] Catching A Panic                             
D[10-10|21:52:10.709] Catching A Panic                             
D[10-10|21:52:10.709] Catching A Panic                             
D[10-10|21:52:10.709] Catching A Panic                             
D[10-10|21:52:10.709] Catching A Panic                             
D[10-10|21:52:10.709] Catching A Panic                             
D[10-10|21:52:10.709] Catching A Panic                             
D[10-10|21:52:10.709] Catching A Panic                             
D[10-10|21:52:10.709] Catching A Panic                             
D[10-10|21:52:10.709] Catching A Panic                             
D[10-10|21:52:10.709] Catching A Panic                             
D[10-10|21:52:10.709] Catching A Panic                             
D[10-10|21:52:10.709] Catching A Panic                             
D[10-10|21:52:10.709] Catching A Panic                             
D[10-10|21:52:10.709] Catching A Panic                             
D[10-10|21:52:10.709] Catching A Panic                             
D[10-10|21:52:10.709] Catching A Panic                             
D[10-10|21:52:10.709] Catching A Panic                             
D[10-10|21:52:10.709] Catching A Panic                             
D[10-10|21:52:10.709] Catching A Panic                             
D[10-10|21:52:10.709] Catching A Panic                             
D[10-10|21:52:10.709] Catching A Panic                             
D[10-10|21:52:10.709] Catching A Panic                             
D[10-10|21:52:10.709] Catching A Panic                             
D[10-10|21:52:10.709] Catching A Panic                             
D[10-10|21:52:10.709] Catching A Panic                             
D[10-10|21:52:10.709] Catching A Panic                             
D[10-10|21:52:10.709] Catching A Panic                             
D[10-10|21:52:10.709] Catching A Panic                             
D[10-10|21:52:10.709] Catching A Panic                             
D[10-10|21:52:10.709] Catching A Panic                             
D[10-10|21:52:10.709] Catching A Panic                             
D[10-10|21:52:10.709] Trying to set Interface                      child="{NodeName:The Child 2 Size:3000 Size2:-1 Interface:<nil> Slice:[] Map:map[] Array:[] Boolean:false Integer:0 Int8:0 Int16:0 Int32:0 Int64:0 UnsignedInt:0 Uint8:0 Uint16:0 Uint32:0 Uint64:0 Float32:0 Float64:0 String:}" type=comm.NodeStruct2 value="<comm.NodeStruct2 Value>"
D[10-10|21:52:10.709] Catching A Panic                             
D[10-10|21:52:10.709] Catching A Panic                             
D[10-10|21:52:10.709] Catching A Panic                             
D[10-10|21:52:10.709] Catching A Panic                             
D[10-10|21:52:10.709] Catching A Panic                             
D[10-10|21:52:10.709] Catching A Panic                             
D[10-10|21:52:10.709] Catching A Panic                             
D[10-10|21:52:10.709] Catching A Panic                             
D[10-10|21:52:10.709] Trying to set Interface                      child="&{NodeName:The Node 1 Size:1000 Interface:<nil> Slice:[] Map:map[] Array:[] Boolean:false Integer:0 Int8:0 Int16:0 Int32:0 Int64:0 UnsignedInt:0 Uint8:0 Uint16:0 Uint32:0 Uint64:0 Float32:0 Float64:0 String:}" type=*comm.NodeStruct1 value="<*comm.NodeStruct1 Value>"
D[10-10|21:52:10.709] Catching A Panic                             
D[10-10|21:52:10.709] Catching A Panic                             
D[10-10|21:52:10.709] Catching A Panic                             
D[10-10|21:52:10.709] Catching A Panic                             
D[10-10|21:52:10.709] Catching A Panic                             
final result:
(*comm.RootStruct2)({
    RootName: (string) (len=10) "The Root 2",
    Count: (int) 2000,
    Node1: (*comm.NodeStruct1)({
        NodeName: (string) (len=10) "The Node 1",
        Size: (int) 1000,
        Interface: (interface {}) <nil>,
        Slice: ([]int) <nil>,
        Map: (map[string]string) <nil>,
        Array: ([]uint8) <nil>,
        Boolean: (bool) false,
        Integer: (int) 0,
        Int8: (int8) 0,
        Int16: (int16) 0,
        Int32: (int32) 0,
        Int64: (int64) 0,
        UnsignedInt: (uint) 0,
        Uint8: (uint8) 0,
        Uint16: (uint16) 0,
        Uint32: (uint32) 0,
        Uint64: (uint64) 0,
        Float32: (float32) 0,
        Float64: (float64) 0,
        String: (string) ""
    }),
    Node2: (comm.NodeStruct2) {
        NodeName: (string) (len=11) "The Child 2",
        Size: (int) 3000,
        Size2: (int) -1,
        Interface: (interface {}) <nil>,
        Slice: ([]int) <nil>,
        Map: (map[string]string) <nil>,
        Array: ([]uint8) <nil>,
        Boolean: (bool) false,
        Integer: (int) 0,
        Int8: (int8) 0,
        Int16: (int16) 0,
        Int32: (int32) 0,
        Int64: (int64) 0,
        UnsignedInt: (uint) 0,
        Uint8: (uint8) 0,
        Uint16: (uint16) 0,
        Uint32: (uint32) 0,
        Uint64: (uint64) 0,
        Float32: (float32) 0,
        Float64: (float64) 0,
        String: (string) ""
    },
    Interface: (interface {}) <nil>,
    Slice: ([]int) <nil>,
    Map: (map[string]string) <nil>,
    Array: ([]uint8) <nil>,
    Boolean: (bool) false,
    Integer: (int) 0,
    Int8: (int8) 0,
    Int16: (int16) 0,
    Int32: (int32) 0,
    Int64: (int64) 0,
    UnsignedInt: (uint) 0,
    Uint8: (uint8) 0,
    Uint16: (uint16) 0,
    Uint32: (uint32) 0,
    Uint64: (uint64) 0,
    Float32: (float32) 0,
    Float64: (float64) 0,
    String: (string) ""
})

original wrapper:
(*map[string]interface {})((len=2) {
    (string) (len=6) "Fields": (map[string]interface {}) (len=22) {
        (string) (len=5) "Array": (interface {}) <nil>,
        (string) (len=7) "Boolean": (bool) false,
        (string) (len=5) "Count": (float64) 2000,
        (string) (len=7) "Float32": (float64) 0,
        (string) (len=7) "Float64": (float64) 0,
        (string) (len=5) "Int16": (float64) 0,
        (string) (len=5) "Int32": (float64) 0,
        (string) (len=5) "Int64": (float64) 0,
        (string) (len=4) "Int8": (float64) 0,
        (string) (len=7) "Integer": (float64) 0,
        (string) (len=9) "Interface": (interface {}) <nil>,
        (string) (len=3) "Map": (interface {}) <nil>,
        (string) (len=5) "Node1": (map[string]interface {}) (len=2) {
            (string) (len=6) "Fields": (map[string]interface {}) (len=20) {
                (string) (len=5) "Array": (interface {}) <nil>,
                (string) (len=7) "Boolean": (bool) false,
                (string) (len=7) "Float32": (float64) 0,
                (string) (len=7) "Float64": (float64) 0,
                (string) (len=5) "Int16": (float64) 0,
                (string) (len=5) "Int32": (float64) 0,
                (string) (len=5) "Int64": (float64) 0,
                (string) (len=4) "Int8": (float64) 0,
                (string) (len=7) "Integer": (float64) 0,
                (string) (len=9) "Interface": (interface {}) <nil>,
                (string) (len=3) "Map": (interface {}) <nil>,
                (string) (len=8) "NodeName": (string) (len=10) "The Node 1",
                (string) (len=4) "Size": (float64) 1000,
                (string) (len=5) "Slice": (interface {}) <nil>,
                (string) (len=6) "String": (string) "",
                (string) (len=6) "Uint16": (float64) 0,
                (string) (len=6) "Uint32": (float64) 0,
                (string) (len=6) "Uint64": (float64) 0,
                (string) (len=5) "Uint8": (float64) 0,
                (string) (len=11) "UnsignedInt": (float64) 0
            },
            (string) (len=4) "Type": (string) (len=17) "*comm.NodeStruct1"
        },
        (string) (len=5) "Node2": (map[string]interface {}) (len=2) {
            (string) (len=6) "Fields": (map[string]interface {}) (len=21) {
                (string) (len=5) "Array": (interface {}) <nil>,
                (string) (len=7) "Boolean": (bool) false,
                (string) (len=7) "Float32": (float64) 0,
                (string) (len=7) "Float64": (float64) 0,
                (string) (len=5) "Int16": (float64) 0,
                (string) (len=5) "Int32": (float64) 0,
                (string) (len=5) "Int64": (float64) 0,
                (string) (len=4) "Int8": (float64) 0,
                (string) (len=7) "Integer": (float64) 0,
                (string) (len=9) "Interface": (interface {}) <nil>,
                (string) (len=3) "Map": (interface {}) <nil>,
                (string) (len=8) "NodeName": (string) (len=11) "The Child 2",
                (string) (len=4) "Size": (float64) 3000,
                (string) (len=5) "Size2": (float64) -1,
                (string) (len=5) "Slice": (interface {}) <nil>,
                (string) (len=6) "String": (string) "",
                (string) (len=6) "Uint16": (float64) 0,
                (string) (len=6) "Uint32": (float64) 0,
                (string) (len=6) "Uint64": (float64) 0,
                (string) (len=5) "Uint8": (float64) 0,
                (string) (len=11) "UnsignedInt": (float64) 0
            },
            (string) (len=4) "Type": (string) (len=16) "comm.NodeStruct2"
        },
        (string) (len=8) "RootName": (string) (len=10) "The Root 2",
        (string) (len=5) "Slice": (interface {}) <nil>,
        (string) (len=6) "String": (string) "",
        (string) (len=6) "Uint16": (float64) 0,
        (string) (len=6) "Uint32": (float64) 0,
        (string) (len=6) "Uint64": (float64) 0,
        (string) (len=5) "Uint8": (float64) 0,
        (string) (len=11) "UnsignedInt": (float64) 0
    },
    (string) (len=4) "Type": (string) (len=17) "*comm.RootStruct2"
})

--- PASS: TestPolymorphism (0.01s)
=== RUN   TestInt
I[10-10|21:52:10.720] Testing int                                  
buffer:
(string) (len=30) "{\"Type\":\"int\",\"Fields\":{\"\":5}}"
(string) (len=3) "err"
(interface {}) <nil>

Deserialize the string:
(string) (len=30) "{\"Type\":\"int\",\"Fields\":{\"\":5}}"

structures:
(map[string]reflect.Type) (len=4) {
    (string) (len=16) "comm.NodeStruct1": (*reflect.rtype)({
        size: (uintptr) 0xb8,
        ptrdata: (uintptr) 0xb0,
        hash: (uint32) 863787458,
        tflag: (reflect.tflag) 7,
        align: (uint8) 8,
        fieldAlign: (uint8) 8,
        kind: (uint8) 25,
        alg: (*reflect.typeAlg)({
            hash: (func(unsafe.Pointer, uintptr) uintptr) <nil>,
            equal: (func(unsafe.Pointer, unsafe.Pointer) bool) <nil>
        }),
        gcdata: (*uint8)(57),
        str: (reflect.nameOff) 137128,
        ptrToThis: (reflect.typeOff) 680352
    }),
    (string) (len=16) "comm.NodeStruct2": (*reflect.rtype)({
        size: (uintptr) 0xc0,
        ptrdata: (uintptr) 0xb8,
        hash: (uint32) 3605935640,
        tflag: (reflect.tflag) 7,
        align: (uint8) 8,
        fieldAlign: (uint8) 8,
        kind: (uint8) 25,
        alg: (*reflect.typeAlg)({
            hash: (func(unsafe.Pointer, uintptr) uintptr) <nil>,
            equal: (func(unsafe.Pointer, unsafe.Pointer) bool) <nil>
        }),
        gcdata: (*uint8)(113),
        str: (reflect.nameOff) 137148,
        ptrToThis: (reflect.typeOff) 680448
    }),
    (string) (len=16) "comm.RootStruct1": (*reflect.rtype)({
        size: (uintptr) 0xc0,
        ptrdata: (uintptr) 0xb8,
        hash: (uint32) 4131684310,
        tflag: (reflect.tflag) 7,
        align: (uint8) 8,
        fieldAlign: (uint8) 8,
        kind: (uint8) 25,
        alg: (*reflect.typeAlg)({
            hash: (func(unsafe.Pointer, uintptr) uintptr) <nil>,
            equal: (func(unsafe.Pointer, unsafe.Pointer) bool) <nil>
        }),
        gcdata: (*uint8)(125),
        str: (reflect.nameOff) 137168,
        ptrToThis: (reflect.typeOff) 680544
    }),
    (string) (len=16) "comm.RootStruct2": (*reflect.rtype)({
        size: (uintptr) 0xd8,
        ptrdata: (uintptr) 0xd0,
        hash: (uint32) 69148155,
        tflag: (reflect.tflag) 7,
        align: (uint8) 8,
        fieldAlign: (uint8) 8,
        kind: (uint8) 25,
        alg: (*reflect.typeAlg)({
            hash: (func(unsafe.Pointer, uintptr) uintptr) <nil>,
            equal: (func(unsafe.Pointer, unsafe.Pointer) bool) <nil>
        }),
        gcdata: (*uint8)(249),
        str: (reflect.nameOff) 137188,
        ptrToThis: (reflect.typeOff) 680640
    })
}

E[10-10|21:52:10.723] FATAL: Missing structure type                name=int
--- FAIL: TestInt (0.00s)
panic: Execution stopped due to Missing structure type [recovered]
	panic: Execution stopped due to Missing structure type

goroutine 49 [running]:
testing.tRunner.func1(0xc4207b10e0)
	/usr/local/Cellar/go/1.10.1/libexec/src/testing/testing.go:742 +0x29d
panic(0x1723540, 0xc420100920)
	/usr/local/Cellar/go/1.10.1/libexec/src/runtime/panic.go:502 +0x229
github.com/Oneledger/protocol/node/log.Fatal(0x1862979, 0x16, 0xc4201c8f80, 0x2, 0x2)
	/Users/paulwhomer/OneLedger/go/src/github.com/Oneledger/protocol/node/log/base.go:82 +0x137
github.com/Oneledger/protocol/node/comm.NewStruct(0xc420890730, 0x3, 0x18547c5, 0x4)
	/Users/paulwhomer/OneLedger/go/src/github.com/Oneledger/protocol/node/comm/message.go:172 +0x1b4
github.com/Oneledger/protocol/node/comm.ContractIt(0xc4200d4910, 0x1760720, 0xc4204d3890, 0x1760720, 0xc4204d3920)
	/Users/paulwhomer/OneLedger/go/src/github.com/Oneledger/protocol/node/comm/functions.go:182 +0x439
github.com/Oneledger/protocol/node/comm.Iterate(0x1760720, 0xc4204d3890, 0xc4200d4910, 0x16, 0x16)
	/Users/paulwhomer/OneLedger/go/src/github.com/Oneledger/protocol/node/comm/iterate.go:204 +0x433
github.com/Oneledger/protocol/node/comm.Contract(0x1708da0, 0xc4200d2128, 0x40, 0x1708da0)
	/Users/paulwhomer/OneLedger/go/src/github.com/Oneledger/protocol/node/comm/functions.go:141 +0xae
github.com/Oneledger/protocol/node/comm.Deserialize(0xc4200e30a0, 0x1e, 0x40, 0x1722a40, 0x1e75720, 0x2, 0x0, 0x0, 0xc4200c75c0, 0xf)
	/Users/paulwhomer/OneLedger/go/src/github.com/Oneledger/protocol/node/comm/message.go:100 +0x193
github.com/Oneledger/protocol/node/comm.TestInt(0xc4207b10e0)
	/Users/paulwhomer/OneLedger/go/src/github.com/Oneledger/protocol/node/comm/message_test.go:281 +0x1e2
testing.tRunner(0xc4207b10e0, 0x19ac608)
	/usr/local/Cellar/go/1.10.1/libexec/src/testing/testing.go:777 +0xd0
created by testing.(*T).Run
	/usr/local/Cellar/go/1.10.1/libexec/src/testing/testing.go:824 +0x2e0
exit status 2
FAIL	github.com/Oneledger/protocol/node/comm	0.148s
